TMS320C2000 Assembler Unix v21.6.0 Tue May  9 11:00:03 2023

Copyright (c) 1996-2018 Texas Instruments Incorporated
../libraries/DCL/DCL_DF22_C2C3.asm                                   PAGE    1

       1              ; DCL_DF22_C2C3.asm - Pre-computed Direct Form 2 implementation in second order
       2              ;
       3              ; Copyright (C) 2020 Texas Instruments Incorporated - http://www.ti.com/
       4              ; ALL RIGHTS RESERVED 
       5              
       6                        .if $defined(__TI_EABI__)
       7                              .if __TI_EABI__
       8                              .asg    DCL_runDF22_C2, _DCL_runDF22_C2
       9                              .asg    DCL_runDF22_C3, _DCL_runDF22_C3
      10                              .endif
      11                    .endif
      12              
      13        0000  FASTCR_DF22_C3  .set    0               ; set to 1 to enable shadowed context save/restore
      14              
      15                              .global _DCL_runDF22_C2
      16                              .global _DCL_runDF22_C3
      17              
      18 00000000                       .sect   "dclfuncs"
      19              
      20              ; C prototype: float DCL_runDF22_C2(DCL_DF22 *p, float32_t ek)
      21              ; argument 1 = *p : controller structure address [XAR4]
      22              ; argument 2 = ek : controller input [R0H]
      23              ; return = uk : controller output [R0H]
      24              
      25                              .align  2
      26              
      27 00000000       _DCL_runDF22_C2:
      28                              .asmfunc
      29 00000000 E2AF                  MOV32           R1H, *+XAR4[0]                  ; R1H = b0
         00000001 01C4 
      30 00000002 28A0                  MOV                     AR0, #0xA                               ; AR0 = 10
         00000003 000A 
      31 00000004 E700                  MPYF32          R0H, R0H, R1H                   ; R0H = ek * b0
         00000005 0040 
      32 00000006 E2AF                  MOV32           R1H, *+XAR4[AR0]                ; R1H = x1
         00000007 0194 
      33 00000008 E710                  ADDF32          R0H, R0H, R1H                   ; R0H = uk
         00000009 0040 
      34 0000000a 0006                  LRETR
      35                              .endasmfunc
      36              
      37              ; C prototype: void DCL_runDF22_C3(DF22 *p, float ek, float uk)
      38              ; argument 1 = *p : controller structure address [XAR4]
      39              ; argument 2 = ek : controller input [R0H]
      40              ; argument 3 = uk : u(k) output [R1H]
      41              ; return: void
      42              
      43                              .align  2
      44              
      45 0000000c       _DCL_runDF22_C3:
      46                              .asmfunc
      47                      .if FASTCR_DF22_C3 = 0
      48 0000000c E203                  MOV32           *SP++, R4H
         0000000d 04BD 
      49 0000000e E203                  MOV32           *SP++, R5H
TMS320C2000 Assembler Unix v21.6.0 Tue May  9 11:00:03 2023

Copyright (c) 1996-2018 Texas Instruments Incorporated
../libraries/DCL/DCL_DF22_C2C3.asm                                   PAGE    2

         0000000f 05BD 
      50 00000010 E203                  MOV32           *SP++, R6H
         00000011 06BD 
      51 00000012 E203                  MOV32           *SP++, R7H
         00000013 07BD 
      52                      .else
      53                              SAVE
      54                      .endif
      55 00000014 E2AF                  MOV32           R2H, *XAR4++                    ; XAR4 = &b1
         00000015 0284 
      56 00000016 E2AF                  MOV32           R2H, *XAR4++                    ; R2H = b1
         00000017 0284 
      57 00000018 E300                  MPYF32          R3H, R2H, R0H                   ; R3H = v1
         00000019 9C84 
      58              ||              MOV32           R4H, *XAR4++                    ; R4H = b2
      59 0000001a E301                  MPYF32          R5H, R4H, R0H                   ; R5H = v2
         0000001b 2E84 
      60              ||              MOV32           R6H, *XAR4++                    ; R6H = a1
      61 0000001c E303                  MPYF32          R7H, R6H, R1H                   ; R7H = v3
         0000001d B884 
      62              ||              MOV32           R0H, *XAR4++                    ; R0H = a2, XAR4 = &x1
      63 0000001e E302                  MPYF32          R0H, R0H, R1H                   ; R0H = v4
         0000001f 02D4 
      64              ||              MOV32           R2H, *+XAR4[2]                  ; R2H = x2
      65 00000020 E710                  ADDF32          R3H, R3H, R2H                   ; R3H = v1 + x2
         00000021 009B 
      66 00000022 E720                  SUBF32          R5H, R5H, R0H                   ; R5H = x2d
         00000023 002D 
      67 00000024 E720                  SUBF32          R2H, R3H, R7H                   ; R2H = x1d
         00000025 01DA 
      68              ;||         MOV32       R7H, *--SP                              ; [CODEGEN-1534] - removed for fast CR
      69 00000026 7700                  NOP                                                                     ; delay slot for R2H
      70 00000027 E203                  MOV32           *+XAR4[2], R5H                  ; save x2
         00000028 05D4 
      71 00000029 E203                  MOV32           *+XAR4[0], R2H                  ; save x1
         0000002a 02C4 
      72                      .if FASTCR_DF22_C3 = 0
      73 0000002b E2AE              MOV32       R7H, *--SP, UNC
         0000002c 07BE 
      74 0000002d E2AE              MOV32       R6H, *--SP, UNC
         0000002e 06BE 
      75 0000002f E2AE                  MOV32           R5H, *--SP, UNC
         00000030 05BE 
      76 00000031 E2AE              MOV32       R4H, *--SP, UNC
         00000032 04BE 
      77                      .else
      78                              RESTORE
      79                      .endif
      80 00000033 0006                  LRETR
      81                              .endasmfunc
      82              
      83                              .end

No Assembly Errors, No Assembly Warnings
